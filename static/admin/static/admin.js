(()=>{function m(a,t=300){let i;return(...e)=>{clearTimeout(i),i=setTimeout(()=>{a.apply(this,e)},t)}}var r={attachFiles:"Attach Files",bold:"Bold",bullets:"Bullets",byte:"Byte",bytes:"Bytes",captionPlaceholder:"Add a caption\u2026",code:"Code",heading1:"Heading",indent:"Increase Level",italic:"Italic",link:"Link",numbers:"Numbers",outdent:"Decrease Level",quote:"Quote",redo:"Redo",remove:"Remove",strike:"Strikethrough",undo:"Undo",unlink:"Unlink",url:"URL",urlPlaceholder:"Enter a URL\u2026",GB:"GB",KB:"KB",MB:"MB",PB:"PB",TB:"TB"};document.addEventListener("trix-before-initialize",()=>{Trix.config.blockAttributes.default.tagName="p",Trix.config.toolbar.getDefaultHTML=()=>`<div class="trix-button-row">
          <span class="trix-button-group trix-button-group--text-tools" data-trix-button-group="text-tools">
            <button type="button" class="trix-button trix-button--icon trix-button--icon-bold" data-trix-attribute="bold" data-trix-key="b" title="${r.bold}" tabindex="-1">${r.bold}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-italic" data-trix-attribute="italic" data-trix-key="i" title="${r.italic}" tabindex="-1">${r.italic}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-strike" data-trix-attribute="strike" title="${r.strike}" tabindex="-1">${r.strike}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-link" data-trix-attribute="href" data-trix-action="link" data-trix-key="k" title="${r.link}" tabindex="-1">${r.link}</button>
          </span>
        
          <span class="trix-button-group trix-button-group--block-tools" data-trix-button-group="block-tools">
            <button type="button" class="trix-button trix-button--icon trix-button--icon-quote" data-trix-attribute="quote" title="${r.quote}" tabindex="-1">${r.quote}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-code" data-trix-attribute="code" title="${r.code}" tabindex="-1">${r.code}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-bullet-list" data-trix-attribute="bullet" title="${r.bullets}" tabindex="-1">${r.bullets}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-number-list" data-trix-attribute="number" title="${r.numbers}" tabindex="-1">${r.numbers}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-decrease-nesting-level" data-trix-action="decreaseNestingLevel" title="${r.outdent}" tabindex="-1">${r.outdent}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-increase-nesting-level" data-trix-action="increaseNestingLevel" title="${r.indent}" tabindex="-1">${r.indent}</button>
          </span>
        
          <span class="trix-button-group-spacer"></span>
        
          <span class="trix-button-group trix-button-group--history-tools" data-trix-button-group="history-tools">
            <button type="button" class="trix-button trix-button--icon trix-button--icon-undo" data-trix-action="undo" data-trix-key="z" title="${r.undo}" tabindex="-1">${r.undo}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-redo" data-trix-action="redo" data-trix-key="shift+z" title="${r.redo}" tabindex="-1">${r.redo}</button>
          </span>
        </div>
        
        <div class="trix-dialogs" data-trix-dialogs>
          <div class="trix-dialog trix-dialog--link" data-trix-dialog="href" data-trix-dialog-attribute="href">
            <div class="trix-dialog__link-fields">
              <input type="text" name="href" class="trix-input trix-input--dialog" placeholder="${r.urlPlaceholder}" aria-label="${r.url}" data-trix-validate-href required data-trix-input>
              <div class="trix-button-group">
                <input type="button" class="trix-button trix-button--dialog" value="${r.link}" data-trix-method="setAttribute">
                <input type="button" class="trix-button trix-button--dialog" value="${r.unlink}" data-trix-method="removeAttribute">
              </div>
            </div>
          </div>
        </div>`});window.shifuTree=function(a){let t=document.getElementById(a);if(!t){console.error("Shifu tree element not found",a);return}let i=new Map,e=localStorage.getItem(a);e&&(i=new Map(JSON.parse(e))),t.querySelectorAll("details").forEach(s=>{let b=s.getAttribute("data-entry");i.get(b)&&s.setAttribute("open",""),s.addEventListener("click",f=>{let d=f.target;for(;!d.hasAttribute("data-entry");)d=d.parentNode;let c=d.getAttribute("data-entry");d.hasAttribute("open")?i.delete(c):i.set(c,!0),localStorage.setItem(a,JSON.stringify(Array.from(i.entries())))})})};window.shifuAddElement=function(a,t){let i=document.getElementById("shifu-new-element");if(i){let e=document.querySelector(`slot[name='${a}/${t}']`);if(e){let s=e.parentElement;s.appendChild(i.content),e.remove(),s.appendChild(e)}else document.body.appendChild(i.content)}else console.error("New element template not found"),location.reload()};window.shifuMoveElement=function(a,t){let i=document.querySelector(`[data-shifu-element='${a}']`);if(i)if(t==="up"){let e=i.previousElementSibling;for(;!e.hasAttribute("data-shifu-element");)e=e.previousElementSibling;if(!e){console.error("Previous element not found",a),location.reload();return}let s=e.getAttribute("data-shifu-element");e.setAttribute("data-shifu-element",i.getAttribute("data-shifu-element")),i.setAttribute("data-shifu-element",s),i.parentNode.insertBefore(i,e)}else{let e=i.nextElementSibling;for(;!e.hasAttribute("data-shifu-element");)e=e.nextElementSibling;if(!e){console.error("Next element not found",a),location.reload();return}let s=e.getAttribute("data-shifu-element");e.setAttribute("data-shifu-element",i.getAttribute("data-shifu-element")),i.setAttribute("data-shifu-element",s),i.parentNode.insertBefore(e,i)}else console.error("Element to move not found",a,t),location.reload()};window.shifuDeleteElement=function(a){let t=document.querySelector(`[data-shifu-element='${a}']`);if(t){let i=t.parentElement,e=!1;for(let s of i.children)e?s.hasAttribute("data-shifu-element")&&s.setAttribute("data-shifu-element",p(s.getAttribute("data-shifu-element"))):e=s.getAttribute("data-shifu-element")===t.getAttribute("data-shifu-element");t.remove()}else console.error("Element to delete not found",a),location.reload()};function p(a){let t=a.split(".");return t[t.length-1]=parseInt(t[t.length-1])-1,t.join(".")}(function(){document.addEventListener("htmx:beforeRequest",n=>{let o=n.target.getAttribute("data-window");if(o){let u=document.getElementById(o);u&&(c(n),u.remove(),n.preventDefault())}}),document.addEventListener("htmx:afterProcessNode",n=>{if(n.target.classList.contains("shifu-window")||n.target.classList.contains("shifu-window-overlay")){let o=n.target;o.classList.contains("shifu-window-overlay")&&(o=o.children[0]),document.querySelectorAll(".shifu-window").forEach(l=>l.classList.remove("shifu-window-active")),o.classList.add("shifu-window-active");let u=o.querySelector(".shifu-window-title");if(u){let l=localStorage.getItem(o.id);if(l){let x=JSON.parse(l);o.style.top=x.top,o.style.left=x.left}u.addEventListener("mousedown",b),u.addEventListener("mouseup",f)}}}),document.addEventListener("htmx:beforeCleanupElement",c),document.addEventListener("htmx:trigger",n=>{if(n.target.classList.contains("shifu-window-close")){c(n);let o=n.target;for(;!o.classList.contains("shifu-window");)o=o.parentNode;o.parentNode&&o.parentNode.classList.contains("shifu-window-overlay")&&o.parentNode.remove(),o.remove()}}),window.addEventListener("mousemove",d);let a=m(n=>{localStorage.setItem(n.id,JSON.stringify({top:n.style.top,left:n.style.left}))}),t=null,i,e,s=0;function b(n){document.querySelectorAll(".shifu-window").forEach(o=>o.classList.remove("shifu-window-active")),t=n.target.parentNode,t.style.zIndex>s&&(s=t.style.zIndex),s++,t.style.zIndex=s,t.classList.add("shifu-window-active"),i=n.clientX,e=n.clientY}function f(){t=null}function d(n){if(t){let o=i-n.clientX,u=e-n.clientY;i=n.clientX,e=n.clientY,t.style.top=t.offsetTop-u+"px",t.style.left=t.offsetLeft-o+"px",a(t)}}function c(n){if(n.target.classList&&n.target.classList.contains("shifu-window")){let o=n.target.querySelector(".shifu-window-title");o&&(o.removeEventListener("mousedown",b),o.removeEventListener("mouseup",f))}}document.addEventListener("htmx:afterRequest",n=>{let o=n.target.getAttribute("data-window");if(o){let u=document.querySelector(o);if(!u)return;for(;!u.classList.contains("shifu-window");)u=u.parentNode;let l=u.querySelector(".shifu-window-title");l&&(l.removeEventListener("mousedown",b),l.removeEventListener("mouseup",f)),u.parentNode&&u.parentNode.classList.contains("shifu-window-overlay")&&u.parentNode.remove(),u.remove()}})})();})();
//# sourceMappingURL=admin.js.map
