(()=>{function p(a,t=300){let e;return(...n)=>{clearTimeout(e),e=setTimeout(()=>{a.apply(this,n)},t)}}var r={attachFiles:"Attach Files",bold:"Bold",bullets:"Bullets",byte:"Byte",bytes:"Bytes",captionPlaceholder:"Add a caption\u2026",code:"Code",heading1:"Heading",indent:"Increase Level",italic:"Italic",link:"Link",numbers:"Numbers",outdent:"Decrease Level",quote:"Quote",redo:"Redo",remove:"Remove",strike:"Strikethrough",undo:"Undo",unlink:"Unlink",url:"URL",urlPlaceholder:"Enter a URL\u2026",GB:"GB",KB:"KB",MB:"MB",PB:"PB",TB:"TB"};document.addEventListener("trix-before-initialize",()=>{Trix.config.blockAttributes.default.tagName="p",Trix.config.toolbar.getDefaultHTML=()=>`<div class="trix-button-row">
          <span class="trix-button-group trix-button-group--text-tools" data-trix-button-group="text-tools">
            <button type="button" class="trix-button trix-button--icon trix-button--icon-bold" data-trix-attribute="bold" data-trix-key="b" title="${r.bold}" tabindex="-1">${r.bold}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-italic" data-trix-attribute="italic" data-trix-key="i" title="${r.italic}" tabindex="-1">${r.italic}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-strike" data-trix-attribute="strike" title="${r.strike}" tabindex="-1">${r.strike}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-link" data-trix-attribute="href" data-trix-action="link" data-trix-key="k" title="${r.link}" tabindex="-1">${r.link}</button>
          </span>
        
          <span class="trix-button-group trix-button-group--block-tools" data-trix-button-group="block-tools">
            <button type="button" class="trix-button trix-button--icon trix-button--icon-quote" data-trix-attribute="quote" title="${r.quote}" tabindex="-1">${r.quote}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-code" data-trix-attribute="code" title="${r.code}" tabindex="-1">${r.code}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-bullet-list" data-trix-attribute="bullet" title="${r.bullets}" tabindex="-1">${r.bullets}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-number-list" data-trix-attribute="number" title="${r.numbers}" tabindex="-1">${r.numbers}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-decrease-nesting-level" data-trix-action="decreaseNestingLevel" title="${r.outdent}" tabindex="-1">${r.outdent}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-increase-nesting-level" data-trix-action="increaseNestingLevel" title="${r.indent}" tabindex="-1">${r.indent}</button>
          </span>
        
          <span class="trix-button-group-spacer"></span>
        
          <span class="trix-button-group trix-button-group--history-tools" data-trix-button-group="history-tools">
            <button type="button" class="trix-button trix-button--icon trix-button--icon-undo" data-trix-action="undo" data-trix-key="z" title="${r.undo}" tabindex="-1">${r.undo}</button>
            <button type="button" class="trix-button trix-button--icon trix-button--icon-redo" data-trix-action="redo" data-trix-key="shift+z" title="${r.redo}" tabindex="-1">${r.redo}</button>
          </span>
        </div>
        
        <div class="trix-dialogs" data-trix-dialogs>
          <div class="trix-dialog trix-dialog--link" data-trix-dialog="href" data-trix-dialog-attribute="href">
            <div class="trix-dialog__link-fields">
              <input type="text" name="href" class="trix-input trix-input--dialog" placeholder="${r.urlPlaceholder}" aria-label="${r.url}" data-trix-validate-href required data-trix-input>
              <div class="trix-button-group">
                <input type="button" class="trix-button trix-button--dialog" value="${r.link}" data-trix-method="setAttribute">
                <input type="button" class="trix-button trix-button--dialog" value="${r.unlink}" data-trix-method="removeAttribute">
              </div>
            </div>
          </div>
        </div>`});function x(a){let t=729790;for(let e=0;e<a.length;e++)t=(t<<5)+t+a.charCodeAt(e);return(t>>>0).toString(16).slice(0,8)}window.shifuTree=function(a){let t=document.getElementById(a);if(!t){console.error("Shifu tree element not found",a);return}let e=new Map,n=localStorage.getItem(`${a}-${x(location.pathname)}`);n&&(e=new Map(JSON.parse(n))),t.querySelectorAll("details").forEach(s=>{let b=s.getAttribute("data-entry");e.get(b)&&s.setAttribute("open",""),s.addEventListener("click",f=>{let d=f.target;for(;!d.hasAttribute("data-entry");)d=d.parentNode;let c=d.getAttribute("data-entry");d.hasAttribute("open")?e.delete(c):e.set(c,!0),localStorage.setItem(`${a}-${x(location.pathname)}`,JSON.stringify(Array.from(e.entries())))})})};window.shifuAddElement=function(a,t){let e=document.getElementById("shifu-new-element");if(e){let n=document.querySelector(`slot[name='${a}/${t}']`);if(n){let s=n.parentElement;s.appendChild(e.content),n.remove(),s.appendChild(n)}else document.body.appendChild(e.content)}else console.error("New element template not found"),location.reload()};window.shifuMoveElement=function(a,t){let e=document.querySelector(`[data-shifu-element='${a}']`);if(e)if(t==="up"){let n=e.previousElementSibling;for(;!n.hasAttribute("data-shifu-element");)n=n.previousElementSibling;if(!n){console.error("Previous element not found",a),location.reload();return}let s=n.getAttribute("data-shifu-element");n.setAttribute("data-shifu-element",e.getAttribute("data-shifu-element")),e.setAttribute("data-shifu-element",s),e.parentNode.insertBefore(e,n)}else{let n=e.nextElementSibling;for(;!n.hasAttribute("data-shifu-element");)n=n.nextElementSibling;if(!n){console.error("Next element not found",a),location.reload();return}let s=n.getAttribute("data-shifu-element");n.setAttribute("data-shifu-element",e.getAttribute("data-shifu-element")),e.setAttribute("data-shifu-element",s),e.parentNode.insertBefore(n,e)}else console.error("Element to move not found",a,t),location.reload()};window.shifuDeleteElement=function(a){let t=document.querySelector(`[data-shifu-element='${a}']`);if(t){let e=t.parentElement,n=!1;for(let s of e.children)n?s.hasAttribute("data-shifu-element")&&s.setAttribute("data-shifu-element",h(s.getAttribute("data-shifu-element"))):n=s.getAttribute("data-shifu-element")===t.getAttribute("data-shifu-element");t.remove()}else console.error("Element to delete not found",a),location.reload()};function h(a){let t=a.split(".");return t[t.length-1]=parseInt(t[t.length-1])-1,t.join(".")}(function(){let a=p(i=>{localStorage.setItem(i.id,JSON.stringify({top:i.style.top,left:i.style.left}))}),t=null,e,n,s=1e5;document.addEventListener("htmx:beforeRequest",i=>{let o=i.target.getAttribute("data-window");if(o){let l=document.getElementById(o);l&&(c(i),l.remove(),i.preventDefault())}}),document.addEventListener("htmx:afterProcessNode",i=>{if(i.target.classList.contains("shifu-window")||i.target.classList.contains("shifu-window-overlay")){let o=i.target;o.classList.contains("shifu-window-overlay")&&(o=o.children[0]),document.querySelectorAll(".shifu-window").forEach(u=>u.classList.remove("shifu-window-active")),o.classList.add("shifu-window-active"),s++,o.style.zIndex=s;let l=o.querySelector(".shifu-window-title");if(l){let u=localStorage.getItem(o.id);if(u){let m=JSON.parse(u);o.style.top=m.top,o.style.left=m.left}l.addEventListener("mousedown",b),l.addEventListener("mouseup",f)}}}),document.addEventListener("htmx:beforeCleanupElement",c),document.addEventListener("htmx:trigger",i=>{if(i.target.classList.contains("shifu-window-close")){c(i);let o=i.target;for(;!o.classList.contains("shifu-window");)o=o.parentNode;o.parentNode&&o.parentNode.classList.contains("shifu-window-overlay")&&o.parentNode.remove(),o.remove()}}),window.addEventListener("mousemove",d);function b(i){document.querySelectorAll(".shifu-window").forEach(o=>o.classList.remove("shifu-window-active")),t=i.target.parentNode,t.style.zIndex>s&&(s=t.style.zIndex),s++,t.style.zIndex=s,t.classList.add("shifu-window-active"),e=i.clientX,n=i.clientY}function f(){t=null}function d(i){if(t){let o=e-i.clientX,l=n-i.clientY;e=i.clientX,n=i.clientY,t.style.top=t.offsetTop-l+"px",t.style.left=t.offsetLeft-o+"px",a(t)}}function c(i){if(i.target.classList&&i.target.classList.contains("shifu-window")){let o=i.target.querySelector(".shifu-window-title");o&&(o.removeEventListener("mousedown",b),o.removeEventListener("mouseup",f))}}document.addEventListener("htmx:afterRequest",i=>{let o=i.target.getAttribute("data-window");if(o){let l=document.querySelector(o);if(!l)return;for(;!l.classList.contains("shifu-window");)l=l.parentNode;let u=l.querySelector(".shifu-window-title");u&&(u.removeEventListener("mousedown",b),u.removeEventListener("mouseup",f)),l.parentNode&&l.parentNode.classList.contains("shifu-window-overlay")&&l.parentNode.remove(),l.remove()}})})();})();
//# sourceMappingURL=admin.js.map
